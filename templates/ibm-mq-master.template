AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This master template creates a VPC infrastructure for a multi-AZ, multi-tier
  deployment of IBM MQ on AWS. It deploys a VPC with bastions and the
  IBM MQ solution. The IBM MQ solution is configured to use
  an S3 bucket for storage. **WARNING** This template creates EC2 instances and
  related resources. You will be billed for the AWS resources used if you create
  a stack from this template.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - RemoteAccessCIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
          - NumBastionHosts
          - Owner
          - InstanceName
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
      - Label:
          default: MQ Configuration
        Parameters:
          - LicenseFileURL
          - InstanceType
          - QueueManagerName
          - MQConsoleUsername
          - MQConsolePassword
          - MQAdminPassword
          - MQAppPassword
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionInstanceType:
        default: Bastion Instance Type
      InstanceName:
        default: Name for EC2 Instance
      NumBastionHosts:
        default: Number of Bastion Hosts
      KeyPairName:
        default: Key Pair Name
      LicenseFileURL:
        default: URL for License File for MQ
      MQConsoleUsername:
        default: Username for MQ Web Console*
      MQConsolePassword:
        default: Password for MQ Web Console*
      MQAdminPassword:
        default: Password for 'mqadmin' user
      MQAppPassword:
        default: Password for 'mqapp' user
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RemoteAccessCIDR:
        default: Allowed Bastion External Access CIDR
      VPCCIDR:
        default: VPC CIDR
Parameters:
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. Only two
      Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-14.04-LTS-HVM
      - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  InstanceName:
    Description: >-
      Name for the EC2 Instance that is deployed by the Auto Scaling group
    Type: String
    Default: ibm-mq
  NumBastionHosts:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Description: Enter the number of bastion Hosts to create
    Type: String
  InstanceType:
    Description: MQ server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  QueueManagerName:
    Description: Name to use for the IBM MQ queue manager
    Type: String
    ConstraintDescription: must be a valid MQ queue manager name.
  KeyPairName:
    Description: >-
      The name of an existing public/private key pair, which allows you to
      securely connect to your instance after it launches
    Type: 'AWS::EC2::KeyPair::KeyName'
  LicenseFileURL:
    Description: >-
      The URL for the license file to enable production mode for MQ
    Type: String
  MQConsoleUsername:
    Description: >-
      Admin Username to access the MQ Web Console (default is mqconsoleadmin)
    Default: mqconsoleadmin
    Type: String
  MQConsolePassword:
    Description: >-
      Admin Password to access the MQ Web Console (Min. Length of 6 Characters)
    Type: String
    MinLength: 6
    NoEcho: True
  MQAdminPassword:
    Description: >-
      Admin Password to access the MQ Admin User (Min. Length of 6 Characters)
    Type: String
    MinLength: 6
    NoEcho: True
  MQAppPassword:
    Description: >-
      Admin Password to access the MQ App User (Min. Length of 6 Characters)
    Type: String
    MinLength: 6
    NoEcho: True
  Owner:
    Description: >-
      Name of owner to display in EC2
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: quickstart-reference
    Description: >-
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot
      start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: ibm/mq/latest/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      The CIDR IP range that is permitted to access the IBM MQ
      software. We recommend that you set this value to a trusted IP range.
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        'Fn::Sub': >-
          https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
      Parameters:
        AvailabilityZones:
          'Fn::Join':
            - ','
            - Ref: AvailabilityZones
        KeyPairName:
          Ref: KeyPairName
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR:
          Ref: PrivateSubnet1CIDR
        PrivateSubnet2ACIDR:
          Ref: PrivateSubnet2CIDR
        PublicSubnet1CIDR:
          Ref: PublicSubnet1CIDR
        PublicSubnet2CIDR:
          Ref: PublicSubnet2CIDR
        VPCCIDR:
          Ref: VPCCIDR
  BastionStack:
    DependsOn: VPCStack
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        'Fn::Sub': >-
          https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
      Parameters:
        BastionAMIOS:
          Ref: BastionAMIOS
        BastionInstanceType:
          Ref: BastionInstanceType
        NumBastionHosts:
          Ref: NumBastionHosts
        KeyPairName:
          Ref: KeyPairName
        PublicSubnet1ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PublicSubnet2ID
        QSS3BucketName:
          Ref: QSS3BucketName
        QSS3KeyPrefix:
          'Fn::Sub': '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        RemoteAccessCIDR:
          Ref: RemoteAccessCIDR
        VPCID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.VPCID
  MQStack:
    DependsOn: BastionStack
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        'Fn::Sub': >-
          https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ibm-mq.template
      Parameters:
        BastionSecurityGroupID:
          'Fn::GetAtt':
            - BastionStack
            - Outputs.BastionSecurityGroupID
        InstanceName:
          Ref: InstanceName
        KeyPairName:
          Ref: KeyPairName
        LicenseFileURL:
          Ref: LicenseFileURL
        MQConsoleUsername:
          Ref: MQConsoleUsername
        MQConsolePassword:
          Ref: MQConsolePassword
        MQAdminPassword:
          Ref: MQAdminPassword
        MQAppPassword:
          Ref: MQAppPassword
        Owner:
          Ref: Owner
        PrivateSubnet1ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PrivateSubnet2AID
        PublicSubnet1ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.PublicSubnet2ID
        QSS3BucketName:
          Ref: QSS3BucketName
        QSS3KeyPrefix:
          Ref: QSS3KeyPrefix
        QueueManagerName:
          Ref: QueueManagerName
        VPCID:
          'Fn::GetAtt':
            - VPCStack
            - Outputs.VPCID
Rules:
  EFSSupportedRegionRule:
    Assertions:
      - Assert:
          'Fn::Contains':
          -
            - 'us-east-1'
            - 'us-east-2'
            - 'us-west-2'
            - 'eu-west-1'
            - 'ap-southeast-2'
          - !Ref "AWS::Region"
        AssertDescription: "This Quick Start utilizes Amazon EFS which is only available in the US East (N. Virginia),
        US East (Ohio), US West (Oregon), EU (Ireland) and Asia Pacific (Sydney) regions. Please launch the stack in one of these regions"
